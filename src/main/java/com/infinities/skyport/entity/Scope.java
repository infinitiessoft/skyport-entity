package com.infinities.skyport.entity;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;

import com.infinities.skyport.compute.entity.AbstractEntity;

/**
 * PermissionObject generated by hbm2java
 */
@Entity
@Table(name = "SCOPE")
public class Scope extends AbstractEntity {

	private static final long serialVersionUID = 1L;

	private String name;
	private String alias;

	@XmlTransient
	private Set<Role> roles = new HashSet<Role>(0);


	public Scope() {
	}

	public Scope(String name, String alias, String desc) {
		this.name = name;
		this.alias = alias;
		setDesc(desc);
	}

	@XmlElement(name = "scopeid")
	@Transient
	public int getScopeid() {
		return getId().intValue();
	}

	@Column(name = "NAME", length = 40)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ALIAS", length = 40)
	public String getAlias() {
		return this.alias;
	}

	public void setAlias(String alias) {
		this.alias = alias;
	}

	@XmlTransient
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scope", cascade = CascadeType.REMOVE)
	public Set<Role> getRoles() {
		return roles;
	}

	@XmlTransient
	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((alias == null) ? 0 : alias.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Scope other = (Scope) obj;
		if (alias == null) {
			if (other.alias != null) {
				return false;
			}
		} else if (!alias.equals(other.alias)) {
			return false;
		}
		if (name == null) {
			if (other.name != null) {
				return false;
			}
		} else if (!name.equals(other.name)) {
			return false;
		}
		return true;
	}

}
